name: Check for updates

on:
  schedule:
    - cron:  '0 10 * * 1'

jobs:
  dependencies:
    name: Prepare Dependencies
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Setup dependencies
        uses: ./.github/actions/setup

  openfga-update:
    runs-on: ubuntu-22.04
    needs:
      - dependencies
    steps:
      - uses: actions/checkout@v3
      - id: openfga
        name: "Get OpenFGA latest version"
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: openfga/openfga
          excludes: prerelease, draft
      - name: "Fetch versions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/openfga/openfga/releases/latest > latest.json
          export LATEST_OPENFGA_VERSION=$(cat latest.json | jq -r '.tag_name')
          echo "latest version: ${LATEST_OPENFGA_VERSION}"
          echo "LATEST_OPENFGA_VERSION=${LATEST_OPENFGA_VERSION}" >> $GITHUB_ENV
          
          export CURRENT_VERSION=$(yq eval '.appVersion' openfga/Chart.yaml)
          echo "CURRENT_OPENFGA_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
      - name: Create issue if new version is available
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          envsubst < .github/NEW_RELEASE_TEMPLATE.md > NEW_RELEASE.md
          gh issue create \
            --title "Update OpenFGA to ${{ env.LATEST_OPENFGA_VERSION }}" \
            --body-file ./NEW_RELEASE.md \
            --assignee AlexandreBrg \
            --label "help wanted,enhancement"
        if: ${{ env.LATEST_OPENFGA_VERSION != env.CURRENT_OPENFGA_VERSION }}
